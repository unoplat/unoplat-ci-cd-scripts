name: Go merge workflow

on:
  pull_request:
    types: [closed]
    branches:
      - main
  
jobs:
  prepare_release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release_action_plan.outputs.releases_created }}
      # tag_name: ${{ steps.release_action_plan.outputs.image-action-gh--tag_name }} # Rewritten this line
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 #         
      - name: Release Please
        id: release_action_plan
        uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/configuration/release-please-config.json
          manifest-file: .github/configuration/release-please-manifest.json
          include-component-in-tag: true
          
      - name: Print paths released
        run: echo "The tag name is ${{ steps.release_action_plan.outputs.image-action-gh-base-project-image-scan--tag_name}}"
    

  # build_and_release:
  #   needs: prepare_release
  #   if: needs.prepare_release.outputs.release_created == 'true'
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       goos: [linux, windows, darwin]
  #       goarch: [amd64, arm64]
  #       exclude:
  #         - goarch: arm64
  #           goos: windows
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Build and Release Go Binary
  #       uses: wangyoucao577/go-release-action@v1
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         goos: ${{ matrix.goos }}
  #         goarch: ${{ matrix.goarch }}
  #         goversion: "https://go.dev/dl/go1.22.0.linux-amd64.tar.gz"
  #         project_path: "image-action-gh/base-project/image-scan"
  #         binary_name: "image-scan"
  #         release_tag: ${{ needs.prepare_release.outputs.tag_name }}
  #         overwrite: true
